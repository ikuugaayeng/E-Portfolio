addLegend(position = "bottomright",
pal = pal_slope,
values = values(slope_mask),
title = "Slope Suitability",
labFormat = labelFormat(transform = function(x) {
c("Low", "Medium", "High")[x]
}))
Slope_raster
library(terra)
library(leaflet)
library(leafem)
library(sf)
# Load slope raster
slope_raster <- rast("data/Slope.tif")
# Read and transform territory shapefile
territory_sf <- st_read("data/QuwutsunTerritory.shp")
territory_sf <- st_transform(territory_sf, crs(slope_raster))
territory_vect <- vect(territory_sf)
# Crop and mask
slope_crop <- crop(slope_raster, territory_vect)
slope_mask <- mask(slope_crop, territory_vect)
# Define proper factor values (1 = Low, 2 = Medium, 3 = High)
slope_mask <- classify(slope_mask, rcl = matrix(c(1, 1, 2, 2, 3, 3), ncol = 2, byrow = TRUE))  # Enforce proper class values
# Set colors (1 = red, 2 = peridot green, 3 = peacock green)
slope_colors <- c("red", "#B4E197", "#00A693")
pal_slope <- colorFactor(palette = slope_colors, domain = c(1, 2, 3), na.color = "transparent")
# Build map
Slope_raster <- leaflet() %>%
addProviderTiles("Esri.WorldTopoMap") %>%
addRasterImage(slope_mask, colors = pal_slope, opacity = 0.7, project = TRUE) %>%
addLegend(position = "bottomright",
pal = pal_slope,
values = c(1, 2, 3),
title = "Slope Suitability",
labels = c("Low", "Medium", "High"))
#Display the map
Slope_raster
library(terra)
library(leaflet)
library(leafem)
library(sf)
# Load slope raster
slope_raster <- rast("data/Slope.tif")
# Read and transform territory shapefile
territory_sf <- st_read("data/QuwutsunTerritory.shp")
territory_sf <- st_transform(territory_sf, crs(slope_raster))
territory_vect <- vect(territory_sf)
# Crop and mask
slope_crop <- crop(slope_raster, territory_vect)
slope_mask <- mask(slope_crop, territory_vect)
# Define proper factor values (1 = Low, 2 = Medium, 3 = High)
slope_mask <- classify(slope_mask, rcl = matrix(c(1, 1, 2, 2, 3, 3), ncol = 2, byrow = TRUE))  # Enforce proper class values
# Set colors (1 = red, 2 = peridot green, 3 = peacock green)
slope_colors <- c("red", "#B4E197", "#00A693")
pal_slope <- colorFactor(palette = slope_colors, domain = c(1, 2, 3), na.color = "transparent")
# Build map
Slope_raster <- leaflet() %>%
addProviderTiles("Esri.WorldTopoMap") %>%
addRasterImage(slope_mask, colors = pal_slope, opacity = 1, project = TRUE) %>%
addLegend(position = "bottomright",
pal = pal_slope,
values = c(1, 2, 3),
title = "Slope Suitability",
labels = c("Low", "Medium", "High"))
#Display the map
Slope_raster
library(sf)
library(leaflet)
# Load the aspect shapefile
aspect_sf <- st_read("C:/Users/lenot14g2/Downloads/E-Portfolio/data/Aspect.shp", quiet = TRUE)
# Define custom colors for suitability classes
aspect_colors <- c("1" = "#E78EAC",   # Ginger Pink for Low
"2" = "#D6C537",   # Citron Yellow for Medium
"3" = "#00A693")   # Peacock Green for High
pal_aspect <- colorFactor(palette = aspect_colors, domain = c("1", "2", "3"), na.color = "transparent")
# Create leaflet map
Aspect_Map <- leaflet(data = aspect_sf) %>%
addProviderTiles("Esri.WorldTopoMap") %>%
addPolygons(color = ~pal_aspect(aspect_sf$Suitability), weight = 1, fillOpacity = 0.7) %>%
addLegend(position = "bottomright",
pal = pal_aspect,
values = c("1", "2", "3"),
title = "Aspect Suitability",
labels = c("Low", "Medium", "High"))
#Display the aspect map
Aspect_Map
library(sf)
library(leaflet)
# Load the aspect shapefile
aspect_sf <- st_read("C:/Users/lenot14g2/Downloads/E-Portfolio/data/Aspect.shp", quiet = TRUE)
# Define custom colors for suitability classes
aspect_colors <- c("1" = "#E78EAC",   # Ginger Pink for Low
"2" = "#D6C537",   # Citron Yellow for Medium
"3" = "#00A693")   # Peacock Green for High
pal_aspect <- colorFactor(palette = aspect_colors, domain = c("1", "2", "3"), na.color = "transparent")
# Create leaflet map
Aspect_Map <- leaflet(data = aspect_sf) %>%
addProviderTiles("Esri.WorldTopoMap") %>%
addPolygons(color = ~pal_aspect(Aspect_Val), weight = 1, fillOpacity = 0.7) %>%
addLegend(position = "bottomright",
pal = pal_aspect,
values = c("1", "2", "3"),
title = "Aspect Suitability",
labels = c("Low", "Medium", "High"))
#Display the aspect map
Aspect_Map
library(terra)
library(leaflet)
library(sf)
# Load the aspect raster
aspect_raster <- rast("C:/Users/lenot14g2/Downloads/E-Portfolio/data/Aspect.tif")
# Load and transform the territory shapefile
territory_sf <- st_read("data/QuwutsunTerritory.shp", quiet = TRUE)
territory_sf <- st_transform(territory_sf, crs(aspect_raster))
territory_vect <- vect(territory_sf)
# Crop and mask the raster
aspect_crop <- crop(aspect_raster, territory_vect)
aspect_mask <- mask(aspect_crop, territory_vect)
# Define custom colors
aspect_colors <- c("gray30", "#A2C523", "#A63A50")  # 1 = Low, 2 = Medium, 3 = High
pal_aspect <- colorFactor(palette = aspect_colors, domain = c(1, 2, 3), na.color = "transparent")
# Create the leaflet map
Aspect_Map <- leaflet() %>%
addProviderTiles("Esri.WorldTopoMap") %>%
addRasterImage(aspect_mask, colors = pal_aspect, opacity = 1, project = TRUE) %>%
addLegend(position = "bottomright",
pal = pal_aspect,
values = c(1, 2, 3),
title = "Aspect Suitability",
labels = c("Low", "Medium", "High"))
#Display the aspect map
Aspect_Map
library(terra)
library(leaflet)
library(sf)
# Load the aspect raster
aspect_raster <- rast("C:/Users/lenot14g2/Downloads/E-Portfolio/data/Aspect.tif")
# Load and transform the territory shapefile
territory_sf <- st_read("data/QuwutsunTerritory.shp", quiet = TRUE)
territory_sf <- st_transform(territory_sf, crs(aspect_raster))
territory_vect <- vect(territory_sf)
# Crop and mask the raster
aspect_crop <- crop(aspect_raster, territory_vect)
aspect_mask <- mask(aspect_crop, territory_vect)
# Define custom colors
aspect_colors <- c("gray30", "#A2C523", "#A63A50")  # 1 = Low, 2 = Medium, 3 = High
pal_aspect <- colorFactor(palette = aspect_colors, domain = c(1, 2, 3), na.color = "transparent")
# Create the leaflet map
Aspect_Map <- leaflet() %>%
addProviderTiles("Esri.WorldTopoMap") %>%
addRasterImage(aspect_mask, colors = pal_aspect, opacity = 2, project = TRUE) %>%
addLegend(position = "bottomright",
pal = pal_aspect,
values = c(1, 2, 3),
title = "Aspect Suitability",
labels = c("Low", "Medium", "High"))
#Display the aspect map
Aspect_Map
library(terra)
library(leaflet)
library(sf)
# Load the aspect raster
aspect_raster <- rast("C:/Users/lenot14g2/Downloads/E-Portfolio/data/Aspect.tif")
# Load and transform the territory shapefile
territory_sf <- st_read("data/QuwutsunTerritory.shp", quiet = TRUE)
territory_sf <- st_transform(territory_sf, crs(aspect_raster))
territory_vect <- vect(territory_sf)
# Crop and mask the raster
aspect_crop <- crop(aspect_raster, territory_vect)
aspect_mask <- mask(aspect_crop, territory_vect)
# Define custom colors
aspect_colors <- c("gray30", "#A2C523", "#A63A50")  # 1 = Low, 2 = Medium, 3 = High
pal_aspect <- colorFactor(palette = aspect_colors, domain = c(1, 2, 3), na.color = "transparent")
# Create the leaflet map
Aspect_Map <- leaflet() %>%
addProviderTiles("Esri.WorldTopoMap") %>%
addRasterImage(aspect_mask, colors = pal_aspect, opacity = 2, project = TRUE) %>%
addLegend(position = "bottomright",
pal = pal_aspect,
values = c(1, 2, 3),
title = "Aspect Suitability",
labels = c("Low", "Medium", "High"))
library(terra)
library(leaflet)
library(sf)
# Load the TWI raster
twi_raster <- rast("C:/Users/lenot14g2/Downloads/E-Portfolio/data/TWI.tif")
# Load and transform the territory shapefile
territory_sf <- st_read("data/QuwutsunTerritory.shp", quiet = TRUE)
territory_sf <- st_transform(territory_sf, crs(twi_raster))
territory_vect <- vect(territory_sf)
# Crop and mask the raster
twi_crop <- crop(twi_raster, territory_vect)
twi_mask <- mask(twi_crop, territory_vect)
# Define custom colors
twi_colors <- c("1" = "#FFD700",   # Electron Gold for Low
"2" = "#007A33",   # Quetzal Green for Medium
"3" = "#4169E1")   # Ultra Blue for High
pal_twi <- colorFactor(palette = twi_colors, domain = c(1, 2, 3), na.color = "transparent")
# Create the leaflet map
TWI_Map <- leaflet() %>%
addProviderTiles("Esri.WorldTopoMap") %>%
addRasterImage(twi_mask, colors = pal_twi, opacity = 1, project = TRUE) %>%
addLegend(position = "bottomright",
pal = pal_twi,
values = c(1, 2, 3),
title = "TWI Suitability",
labels = c("Low", "Medium", "High"))
#Display the TWI map
TWI_Map
library(terra)
library(leaflet)
library(sf)
# Load the TWI raster
twi_raster <- rast("C:/Users/lenot14g2/Downloads/E-Portfolio/data/TWI.tif")
# Load and transform the territory shapefile
territory_sf <- st_read("data/QuwutsunTerritory.shp", quiet = TRUE)
territory_sf <- st_transform(territory_sf, crs(twi_raster))
territory_vect <- vect(territory_sf)
# Crop and mask the raster
twi_crop <- crop(twi_raster, territory_vect)
twi_mask <- mask(twi_crop, territory_vect)
# Define custom colors
twi_colors <- c("1" = "#FFD700",   # Electron Gold for Low
"2" = "#007A33",   # Quetzal Green for Medium
"3" = "#4169E1")   # Ultra Blue for High
pal_twi <- colorFactor(palette = twi_colors, domain = c(1, 2, 3), na.color = "transparent")
# Create the leaflet map
TWI_Map <- leaflet() %>%
addProviderTiles("Esri.WorldTopoMap") %>%
addRasterImage(twi_mask, colors = pal_twi, opacity = 2, project = TRUE) %>%
addLegend(position = "bottomright",
pal = pal_twi,
values = c(1, 2, 3),
title = "TWI Suitability",
labels = c("Low", "Medium", "High"))
library(terra)
library(leaflet)
library(sf)
# Load the TWI raster
twi_raster <- rast("C:/Users/lenot14g2/Downloads/E-Portfolio/data/TWI.tif")
# Load and transform the territory shapefile
territory_sf <- st_read("data/QuwutsunTerritory.shp", quiet = TRUE)
territory_sf <- st_transform(territory_sf, crs(twi_raster))
territory_vect <- vect(territory_sf)
# Crop and mask the raster
twi_crop <- crop(twi_raster, territory_vect)
twi_mask <- mask(twi_crop, territory_vect)
# Define custom colors
twi_colors <- c("1" = "gray20",   # Electron Gold for Low
"2" = "#007A33",   # Quetzal Green for Medium
"3" = "#4169E1")   # Ultra Blue for High
pal_twi <- colorFactor(palette = twi_colors, domain = c(1, 2, 3), na.color = "transparent")
# Create the leaflet map
TWI_Map <- leaflet() %>%
addProviderTiles("Esri.WorldTopoMap") %>%
addRasterImage(twi_mask, colors = pal_twi, opacity = 2, project = TRUE) %>%
addLegend(position = "bottomright",
pal = pal_twi,
values = c(1, 2, 3),
title = "TWI Suitability",
labels = c("Low", "Medium", "High"))
#Display the TWI map
TWI_Map
#Display the TWI map
TWI_Map
library(terra)
library(leaflet)
library(sf)
# Load the TWI raster
twi_raster <- rast("C:/Users/lenot14g2/Downloads/E-Portfolio/data/TWI.tif")
# Load and transform the territory shapefile
territory_sf <- st_read("data/QuwutsunTerritory.shp", quiet = TRUE)
territory_sf <- st_transform(territory_sf, crs(twi_raster))
territory_vect <- vect(territory_sf)
# Crop and mask the raster
twi_crop <- crop(twi_raster, territory_vect)
twi_mask <- mask(twi_crop, territory_vect)
# Define custom colors
twi_colors <- c("1" = "gray20",   # Electron Gold for Low
"2" = "red",   # Quetzal Green for Medium
"3" = "#4169E1")   # Ultra Blue for High
pal_twi <- colorFactor(palette = twi_colors, domain = c(1, 2, 3), na.color = "transparent")
# Create the leaflet map
TWI_Map <- leaflet() %>%
addProviderTiles("Esri.WorldTopoMap") %>%
addRasterImage(twi_mask, colors = pal_twi, opacity = 2, project = TRUE) %>%
addLegend(position = "bottomright",
pal = pal_twi,
values = c(1, 2, 3),
title = "TWI Suitability",
labels = c("Low", "Medium", "High"))
#Display the TWI map
TWI_Map
library(terra)
library(leaflet)
library(sf)
# Load the TWI raster
twi_raster <- rast("C:/Users/lenot14g2/Downloads/E-Portfolio/data/TWI.tif")
# Load and transform the territory shapefile
territory_sf <- st_read("data/QuwutsunTerritory.shp", quiet = TRUE)
territory_sf <- st_transform(territory_sf, crs(twi_raster))
territory_vect <- vect(territory_sf)
# Crop and mask the raster
twi_crop <- crop(twi_raster, territory_vect)
twi_mask <- mask(twi_crop, territory_vect)
# Define custom colors
twi_colors <- c("1" = "gray20",   # Electron Gold for Low
"2" = "red",   # Quetzal Green for Medium
"3" = "blue")   # Ultra Blue for High
pal_twi <- colorFactor(palette = twi_colors, domain = c(1, 2, 3), na.color = "transparent")
# Create the leaflet map
TWI_Map <- leaflet() %>%
addProviderTiles("Esri.WorldTopoMap") %>%
addRasterImage(twi_mask, colors = pal_twi, opacity = 2, project = TRUE) %>%
addLegend(position = "bottomright",
pal = pal_twi,
values = c(1, 2, 3),
title = "TWI Suitability",
labels = c("Low", "Medium", "High"))
library(terra)
library(leaflet)
library(sf)
# Load the TWI raster
twi_raster <- rast("C:/Users/lenot14g2/Downloads/E-Portfolio/data/TWI.tif")
# Load and transform the territory shapefile
territory_sf <- st_read("data/QuwutsunTerritory.shp", quiet = TRUE)
territory_sf <- st_transform(territory_sf, crs(twi_raster))
territory_vect <- vect(territory_sf)
# Crop and mask the raster
twi_crop <- crop(twi_raster, territory_vect)
twi_mask <- mask(twi_crop, territory_vect)
# Define custom colors
twi_colors <- c("1" = "gray20",   # Electron Gold for Low
"2" = "red",   # Quetzal Green for Medium
"3" = "blue")   # Ultra Blue for High
pal_twi <- colorFactor(palette = twi_colors, domain = c(1, 2, 3), na.color = "transparent")
# Create the leaflet map
TWI_Map <- leaflet() %>%
addProviderTiles("Light Gray Canvas") %>%
addRasterImage(twi_mask, colors = pal_twi, opacity = 2, project = TRUE) %>%
addLegend(position = "bottomright",
pal = pal_twi,
values = c(1, 2, 3),
title = "TWI Suitability",
labels = c("Low", "Medium", "High"))
library(terra)
library(leaflet)
library(sf)
# Load the TWI raster
twi_raster <- rast("C:/Users/lenot14g2/Downloads/E-Portfolio/data/TWI.tif")
# Load and transform the territory shapefile
territory_sf <- st_read("data/QuwutsunTerritory.shp", quiet = TRUE)
territory_sf <- st_transform(territory_sf, crs(twi_raster))
territory_vect <- vect(territory_sf)
# Crop and mask the raster
twi_crop <- crop(twi_raster, territory_vect)
twi_mask <- mask(twi_crop, territory_vect)
# Define custom colors
twi_colors <- c("1" = "gray20",   # Electron Gold for Low
"2" = "red",   # Quetzal Green for Medium
"3" = "blue")   # Ultra Blue for High
pal_twi <- colorFactor(palette = twi_colors, domain = c(1, 2, 3), na.color = "transparent")
# Create the leaflet map
TWI_Map <- leaflet() %>%
addProviderTiles("Esir.Light Gray Canvas") %>%
addRasterImage(twi_mask, colors = pal_twi, opacity = 2, project = TRUE) %>%
addLegend(position = "bottomright",
pal = pal_twi,
values = c(1, 2, 3),
title = "TWI Suitability",
labels = c("Low", "Medium", "High"))
library(terra)
library(leaflet)
library(sf)
# Load the TWI raster
twi_raster <- rast("C:/Users/lenot14g2/Downloads/E-Portfolio/data/TWI.tif")
# Load and transform the territory shapefile
territory_sf <- st_read("data/QuwutsunTerritory.shp", quiet = TRUE)
territory_sf <- st_transform(territory_sf, crs(twi_raster))
territory_vect <- vect(territory_sf)
# Crop and mask the raster
twi_crop <- crop(twi_raster, territory_vect)
twi_mask <- mask(twi_crop, territory_vect)
# Define custom colors
twi_colors <- c("1" = "gray20",   # Electron Gold for Low
"2" = "red",   # Quetzal Green for Medium
"3" = "blue")   # Ultra Blue for High
pal_twi <- colorFactor(palette = twi_colors, domain = c(1, 2, 3), na.color = "transparent")
# Create the leaflet map
TWI_Map <- leaflet() %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(twi_mask, colors = pal_twi, opacity = 2, project = TRUE) %>%
addLegend(position = "bottomright",
pal = pal_twi,
values = c(1, 2, 3),
title = "TWI Suitability",
labels = c("Low", "Medium", "High"))
#Display the TWI map
TWI_Map
library(terra)
library(leaflet)
library(sf)
# Load the TWI raster
twi_raster <- rast("C:/Users/lenot14g2/Downloads/E-Portfolio/data/TWI.tif")
# Load and transform the territory shapefile
territory_sf <- st_read("data/QuwutsunTerritory.shp", quiet = TRUE)
territory_sf <- st_transform(territory_sf, crs(twi_raster))
territory_vect <- vect(territory_sf)
# Crop and mask the raster
twi_crop <- crop(twi_raster, territory_vect)
twi_mask <- mask(twi_crop, territory_vect)
# Define custom colors
twi_colors <- c("1" = "#FFD700",   # Electron Gold for Low
"2" = "red",   # Quetzal Green for Medium
"3" = "blue")   # Ultra Blue for High
pal_twi <- colorFactor(palette = twi_colors, domain = c(1, 2, 3), na.color = "transparent")
# Create the leaflet map
TWI_Map <- leaflet() %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(twi_mask, colors = pal_twi, opacity = 2, project = TRUE) %>%
addLegend(position = "bottomright",
pal = pal_twi,
values = c(1, 2, 3),
title = "TWI Suitability",
labels = c("Low", "Medium", "High"))
#Display the TWI map
TWI_Map
library(terra)
library(leaflet)
library(sf)
# Load the TWI raster
twi_raster <- rast("C:/Users/lenot14g2/Downloads/E-Portfolio/data/TWI.tif")
# Load and transform the territory shapefile
territory_sf <- st_read("data/QuwutsunTerritory.shp", quiet = TRUE)
territory_sf <- st_transform(territory_sf, crs(twi_raster))
territory_vect <- vect(territory_sf)
# Crop and mask the raster
twi_crop <- crop(twi_raster, territory_vect)
twi_mask <- mask(twi_crop, territory_vect)
# Define custom colors
twi_colors <- c("1" = "#FFD700",   # Electron Gold for Low
"2" = "blue",   # Quetzal Green for Medium
"3" = "red")   # Ultra Blue for High
pal_twi <- colorFactor(palette = twi_colors, domain = c(1, 2, 3), na.color = "transparent")
# Create the leaflet map
TWI_Map <- leaflet() %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(twi_mask, colors = pal_twi, opacity = 2, project = TRUE) %>%
addLegend(position = "bottomright",
pal = pal_twi,
values = c(1, 2, 3),
title = "TWI Suitability",
labels = c("Low", "Medium", "High"))
#Display the TWI map
TWI_Map
library(terra)
library(leaflet)
library(sf)
# Load the TWI raster
twi_raster <- rast("C:/Users/lenot14g2/Downloads/E-Portfolio/data/TWI.tif")
# Load and transform the territory shapefile
territory_sf <- st_read("data/QuwutsunTerritory.shp", quiet = TRUE)
territory_sf <- st_transform(territory_sf, crs(twi_raster))
territory_vect <- vect(territory_sf)
# Crop and mask the raster
twi_crop <- crop(twi_raster, territory_vect)
twi_mask <- mask(twi_crop, territory_vect)
# Define custom colors
twi_colors <- c("1" = "#E99746",   # Electron Gold for Low
"2" = "#1BC51F",   # Quetzal Green for Medium
"3" = "#005CE6")   # Ultra Blue for High
pal_twi <- colorFactor(palette = twi_colors, domain = c(1, 2, 3), na.color = "transparent")
# Create the leaflet map
TWI_Map <- leaflet() %>%
addProviderTiles("Esri.WorldGrayCanvas") %>%
addRasterImage(twi_mask, colors = pal_twi, opacity = 2, project = TRUE) %>%
addLegend(position = "bottomright",
pal = pal_twi,
values = c(1, 2, 3),
title = "TWI Suitability",
labels = c("Low", "Medium", "High"))
#Display the TWI map
TWI_Map
library(terra)
library(leaflet)
library(sf)
# Load the TWI raster
twi_raster <- rast("C:/Users/lenot14g2/Downloads/E-Portfolio/data/TWI.tif")
# Load and transform the territory shapefile
territory_sf <- st_read("data/QuwutsunTerritory.shp", quiet = TRUE)
territory_sf <- st_transform(territory_sf, crs(twi_raster))
territory_vect <- vect(territory_sf)
# Crop and mask the raster
twi_crop <- crop(twi_raster, territory_vect)
twi_mask <- mask(twi_crop, territory_vect)
# Define custom colors
twi_colors <- c("1" = "#E99746",   # Electron Gold for Low
"2" = "#1BC51F",   # Quetzal Green for Medium
"3" = "#005CE6")   # Ultra Blue for High
pal_twi <- colorFactor(palette = twi_colors, domain = c(1, 2, 3), na.color = "transparent")
# Create the leaflet map
TWI_Map <- leaflet() %>%
addProviderTiles("Esri.WorldTopoMap") %>%
addRasterImage(twi_mask, colors = pal_twi, opacity = 2, project = TRUE) %>%
addLegend(position = "bottomright",
pal = pal_twi,
values = c(1, 2, 3),
title = "TWI Suitability",
labels = c("Low", "Medium", "High"))
#Display the TWI map
TWI_Map
